## Nuage de points

::: {.callout-note appearance="simple"}
Prompt : 

* Comment tracer un nuage de points en R?


:::

----

## ChatGPT {style="background-color: #f0f8ff; padding: 20px;"}
![ChatGPT](../img/ChatGPT.PNG)

Tracer un nuage de points en R est simple gr√¢ce √† la fonction **`plot()`** ou des biblioth√®ques comme **`ggplot2`**. Voici des exemples pour chaque m√©thode.

---

### **M√©thode de base avec `plot()`**
1. Cr√©ez des donn√©es :
```R
# G√©n√©ration des donn√©es
x <- rnorm(100)  # 100 valeurs al√©atoires pour X
y <- rnorm(100)  # 100 valeurs al√©atoires pour Y
```

2. Tracez le nuage de points :
```R
# Nuage de points simple
plot(x, y, 
     main = "Nuage de points", 
     xlab = "Axe X", 
     ylab = "Axe Y", 
     pch = 16,    # Style des points
     col = "blue")  # Couleur des points
```

---

### **Avec `ggplot2`**
1. Installez et chargez la biblioth√®que si n√©cessaire :
```R
install.packages("ggplot2")  # Une seule fois
library(ggplot2)
```

2. Cr√©ez un data frame pour les donn√©es :
```R
# Cr√©ation du data frame
data <- data.frame(x = rnorm(100), y = rnorm(100))
```

3. Tracez le nuage de points avec `ggplot` :
```R
ggplot(data, aes(x = x, y = y)) +
  geom_point(color = "blue") +
  labs(title = "Nuage de points", x = "Axe X", y = "Axe Y") +
  theme_minimal()  # Style de graphique √©pur√©
```

---

### Points √† personnaliser
1. **Taille des points** : 
   - Avec `plot()` : Ajoutez `cex = 1.5`.
   - Avec `ggplot2` : Utilisez `geom_point(size = 3)`.

2. **Forme des points** : 
   - Avec `plot()` : Changez `pch =`.
   - Avec `ggplot2` : Changez l'argument `shape` dans `geom_point()`.

3. **Couleurs bas√©es sur une cat√©gorie** (avec `ggplot2`) :
   Si vous avez une variable cat√©gorielle, vous pouvez colorier les points par cat√©gorie :
   ```R
   data$category <- factor(sample(c("A", "B"), 100, replace = TRUE))
   ggplot(data, aes(x = x, y = y, color = category)) +
     geom_point(size = 3) +
     labs(title = "Nuage de points par cat√©gorie") +
     theme_minimal()
   ```

Ces outils offrent beaucoup de flexibilit√© pour des visualisations simples ou avanc√©es. üòä

----

## Copilot {style="background-color: #faa555; padding: 20px;"}![Copilot](../img/copilot.PNG)

Pour tracer un nuage de points en R, vous pouvez utiliser la fonction `plot()` pour une m√©thode simple ou le package `ggplot2` pour des visualisations plus avanc√©es. Voici un exemple de chaque m√©thode :

### Utilisation de `plot()`

```R
# Exemple de donn√©es
x <- rnorm(100)
y <- rnorm(100)

# Tracer un nuage de points simple
plot(x, y, main="Nuage de points simple", xlab="X", ylab="Y")
```

### Utilisation de `ggplot2`

```R
# Installer et charger le package ggplot2
install.packages("ggplot2")
library(ggplot2)

# Exemple de donn√©es
data <- data.frame(x = rnorm(100), y = rnorm(100))

# Tracer un nuage de points avec ggplot2
ggplot(data, aes(x = x, y = y)) +
  geom_point() +
  labs(title="Nuage de points avec ggplot2", x="X", y="Y")
```

Ces deux m√©thodes vous permettent de cr√©er des nuages de points, mais `ggplot2` offre plus de flexibilit√© et de possibilit√©s de personnalisation[1](https://www.guru99.com/fr/r-scatter-plot-ggplot2.html)[2](https://www.sthda.com/french/wiki/ggplot2-nuage-de-points-guide-de-d-marrage-rapide-logiciel-r-et-visualisation-de-donn-es?title=ggplot2-nuage-de-points-guide-de-d-marrage-rapide-logiciel-r-et-visualisation-de-donn-es).

Si vous avez des questions sp√©cifiques ou besoin d'aide avec un aspect particulier, n'h√©sitez pas √† demander ! üòä